name: Manual Release

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (do not actually publish)'
        required: false
        type: boolean
        default: true

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Manual Release to crates.io
    runs-on: ubuntu-latest
    environment: crates-io
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Check current version
        id: version
        run: |
          VERSION=$(grep "^version" Cargo.toml | head -1 | cut -d'"' -f2)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "Current version: $VERSION"

          # Check if this version is already published
          if cargo search rusty-commit --limit 1 | grep -q "rusty-commit = \"$VERSION\""; then
            echo "::warning::Version $VERSION is already published on crates.io"
            echo "already_published=true" >> "$GITHUB_OUTPUT"
          else
            echo "Version $VERSION is not yet published"
            echo "already_published=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Run tests
        run: |
          cargo test --all-features
          cargo test --doc

      - name: Build release
        run: cargo build --release --all-features

      - name: Package validation
        run: |
          cargo package --list
          cargo package --allow-dirty

      - name: Publish (Dry Run)
        if: inputs.dry_run == true
        run: |
          echo "DRY RUN: Would publish version ${{ steps.version.outputs.version }} to crates.io"
          cargo publish --dry-run --token ${{ secrets.CRATES_IO_API_TOKEN }}

      - name: Publish to crates.io
        if: inputs.dry_run == false && steps.version.outputs.already_published == 'false'
        run: |
          cargo publish --token ${{ secrets.CRATES_IO_API_TOKEN }}
          echo "Published version ${{ steps.version.outputs.version }} to crates.io"
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_API_TOKEN }}

      - name: Create git tag
        if: inputs.dry_run == false && steps.version.outputs.already_published == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          TAG="v${{ steps.version.outputs.version }}"

          # Check if tag already exists
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists"
          else
            git tag -a "$TAG" -m "Release version ${{ steps.version.outputs.version }}"
            git push origin "$TAG"
            echo "Created and pushed tag $TAG"
          fi

      - name: Summary
        run: |
          if [ "${{ inputs.dry_run }}" == "true" ]; then
            {
              echo "## Dry Run Complete"
              echo "Would have published version ${{ steps.version.outputs.version }}"
            } >> "$GITHUB_STEP_SUMMARY"
          else
            if [ "${{ steps.version.outputs.already_published }}" == "true" ]; then
              {
                echo "## Release Skipped"
                echo "Version ${{ steps.version.outputs.version }} was already published"
              } >> "$GITHUB_STEP_SUMMARY"
            else
              {
                echo "## Release Complete"
                echo "Successfully published version ${{ steps.version.outputs.version }} to crates.io"
                echo ""
                echo "### Next Steps"
                echo "1. Create a GitHub release with tag v${{ steps.version.outputs.version }}"
                echo "2. Upload release binaries"
                echo "3. Update documentation"
              } >> "$GITHUB_STEP_SUMMARY"
            fi
          fi
